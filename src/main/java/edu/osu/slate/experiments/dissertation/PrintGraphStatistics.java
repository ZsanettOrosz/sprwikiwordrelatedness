package edu.osu.slate.experiments.dissertation;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.ObjectOutputStream;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeMap;

public class PrintGraphStatistics {

  /* Name of the input file generated by Wikipedia (page.sql) */
  private static String inputFileName;
  
  /**
   * Checks and opens the input file.
   * 
   * @return Scanner for reading the input file
   */
   private static Scanner openInputFile() {
     try {
       //inputFileName = "/scratch/weale/data/source/enwiki/20080103/enwiki-20080103-page.sql";
       inputFileName = "/scratch/weale/data/source/enwiktionary/20090203/enwiktionary-20090203-page.sql";
       Scanner in = new Scanner(new FileReader(inputFileName));
       return in;        
     } catch (FileNotFoundException e) {
       System.out.println("File not found: " + inputFileName);
       e.printStackTrace();
     }
         
     System.exit(1);
     return null;    
   }//end: openInputFile()
   
  /**
   * @param args
   */
  public static void main(String[] args) {
    /* Open input and output files */
    Scanner in = openInputFile();
    
    TreeMap<String,Integer> tm = new TreeMap();
    int numValid = 0;
    int numRedirect = 0;
    int total = 0;
    
    String str = in.nextLine();
    while(str.indexOf("INSERT INTO") == -1)
    {
      str = in.nextLine();
    }
        
    int tmp = 0;
    while(tmp < 3 && str != null && !str.trim().equals("")) {
      str = str.substring(str.indexOf("(")+1, str.length()-3);

      // Split the String into the page information
      String [] arr = str.split("\\d\\),\\(");
      
      for(int i = 0; i < arr.length; i++)
      {
        //System.out.println(arr[i]);
        String [] info = arr[i].split(",");
              
        // Check if the information is in the correct format
        if(info.length >= 11) {
                  
          // Extract page, namespace and redirect information
          String page = info[0];
          String namespace = info[1];
          String redirect = info[info.length-6];
          
          if(tm.containsKey(namespace))
          {
            int num = tm.get(namespace);
            tm.put(namespace, num+1);
          }
          else {
            tm.put(namespace, 1);
          }
          
          if(namespace.equals("0") && redirect.equals("0"))
          {
            numValid++;
          }
          if(namespace.equals("0") && redirect.equals("1"))
          {
            numRedirect++;
          }
        }//end: if(info.length)
      }//end: for(i)
          
      str = in.nextLine();
    }//end: while()

    Set<Map.Entry<String,Integer>> set = tm.entrySet();
    Iterator<Map.Entry<String,Integer>> it = set.iterator();
    while(it.hasNext()) {
      Map.Entry<String, Integer> me = it.next();
      System.out.println(me.getKey() + "\t" + me.getValue());
      total += me.getValue();
    }//end: while(it)
    System.out.println(numValid);
    System.out.println(numRedirect);
    System.out.println(total);
  }//end: main()
}
